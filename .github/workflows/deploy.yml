name: Deploy to Render

on:
  workflow_run:
    workflows: ["Sonar Analysis"]
    types:
      - completed

permissions:
  contents: write
  deployments: write
  statuses: write

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üî® Trigger Render Deployment
        run: |
          echo "üöÄ Triggering deployment on Render..."

          RESPONSE=$(curl -s -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}")

          echo "‚úÖ Deployment triggered."
          echo "$RESPONSE"

      - name: ‚è≥ Wait for Render Deployment to Complete
        run: |
          echo "‚è≥ Polling Render deployment status..."

          ENDPOINT="https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"
          HEADER="Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

          for i in {1..30}
          do
            echo "üîÅ Polling attempt #$i"
            DEPLOYS=$(curl -s -H "$HEADER" "$ENDPOINT")
            STATUS=$(echo "$DEPLOYS" | jq -r '.[0].deploy.status')

            echo "üì¶ Latest deployment status: $STATUS"

            if [[ "$STATUS" == "created" || "$STATUS" == "build_in_progress" || "$STATUS" == "update_in_progress" ]]; then
              sleep 10
            else
              if [[ "$STATUS" == "live" ]]; then
                echo "‚úÖ Deployment completed successfully!"
                exit 0
              else
                echo "‚ùå Deployment failed or canceled. Status: $STATUS"
                exit 1
              fi
            fi
          done

          echo "‚è∞ Timed out waiting for deployment to finish."
          exit 1
